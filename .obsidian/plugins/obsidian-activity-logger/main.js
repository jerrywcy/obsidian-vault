var L=Object.create,l=Object.defineProperty,v=Object.getPrototypeOf,S=Object.prototype.hasOwnProperty,F=Object.getOwnPropertyNames,w=Object.getOwnPropertyDescriptor;var h=s=>l(s,"__esModule",{value:!0});var x=(s,e)=>{for(var t in e)l(s,t,{get:e[t],enumerable:!0})},E=(s,e,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of F(e))!S.call(s,i)&&i!=="default"&&l(s,i,{get:()=>e[i],enumerable:!(t=w(e,i))||t.enumerable});return s},p=s=>E(h(l(s!=null?L(v(s)):{},"default",s&&s.__esModule&&"default"in s?{get:()=>s.default,enumerable:!0}:{value:s,enumerable:!0})),s);h(exports);x(exports,{default:()=>b});var g=p(require("obsidian"));var a=p(require("obsidian")),d=class extends a.PluginSettingTab{constructor(e,t){super(e,t);this.plugin=t}display(){let{containerEl:e}=this;e.empty(),new a.Setting(e).setName("Start Line").setDesc("").addText(t=>t.setValue(this.plugin.settings.startLine).onChange(async i=>{this.plugin.settings.startLine=i,await this.plugin.saveSettings()})),new a.Setting(e).setName("End Line").setDesc("").addText(t=>t.setPlaceholder("").setValue(this.plugin.settings.endLine).onChange(async i=>{this.plugin.settings.endLine=i,await this.plugin.saveSettings()})),new a.Setting(e).setName("Template").setDesc("").addTextArea(t=>{t.setValue(this.plugin.settings.template).onChange(async i=>{i.endsWith(`
`)||(i+=`
`),this.plugin.settings.template=i,await this.plugin.saveSettings()}),t.inputEl.rows=5,t.inputEl.cols=40})}},u=d;var y={template:`CreatedFiles

- [[$createdFiles]]

DeletedFiles

- [[$deletedFiles]]

ModifiedFiles

- [[$modifiedFiles]]

`,startLine:"--start--",endLine:"--end--"},c=class extends g.Plugin{constructor(){super(...arguments);this.regexs={createdFiles:/(?<=\n)[\S ]*\$createdFiles[\S ]*\n/m,deletedFiles:/(?<=\n)[\S ]*\$deletedFiles[\S ]*\n/m,modifiedFiles:/(?<=\n)[\S ]*\$modifiedFiles[\S ]*\n/m}}getEditor(){let e=this.app.workspace.getActiveViewOfType(g.MarkdownView);return e?e.editor:null}async onload(){console.log("loading plugin"),await this.loadSettings(),this.data=JSON.parse(window.localStorage.getItem(`ActivityLogger-${this.app.vault.getName()}`));let e=this.getDate();(!this.data||this.data.date[0]!=e)&&(this.data={date:[e],createdFiles:[],deletedFiles:[],modifiedFiles:[]}),this.addSettingTab(new u(this.app,this)),this.addCommand({id:"insert-logs",name:"Insert Logs",callback:()=>null,checkCallback:t=>this.app.workspace.activeLeaf?(t||this.insertLogs(),!0):!1}),this.app.workspace.onLayoutReady(()=>{this.registerEvent(this.app.vault.on("modify",t=>{this.saveLogs(t.path,"modifiedFiles")})),this.registerEvent(this.app.vault.on("delete",t=>{this.saveLogs(t.path,"deletedFiles")})),this.registerEvent(this.app.vault.on("create",t=>{console.log("create",t.path),this.saveLogs(t.path,"createdFiles")}))})}saveLogs(e,t){let i=this.getDate();i==this.data.date[0]?this.data[t].indexOf(e)==-1&&this.data[t].push(e):(this.data.date[0]=i,this.data.createdFiles=[],this.data.modifiedFiles=[],this.data.deletedFiles=[],this.data[t].push(e)),window.localStorage.setItem(`ActivityLogger-${this.app.vault.getName()}`,JSON.stringify(this.data))}getDate(){let e=new Date;return"{0}-{1}-{2}".format(e.getFullYear().toString(),(e.getMonth()+1).toString(),e.getDate().toString())}getInsertLocation(e){let t=e.lineCount(),i={begin:{line:-1,ch:-1},end:{line:-1,ch:-1}},n=0;for(n=0;n<t;++n)if(e.getLine(n)===this.settings.startLine){i.begin.line=n+1,i.begin.ch=0;break}for(n++,n;n<t;++n)if(e.getLine(n)===this.settings.endLine){i.end.line=n,i.end.ch=0;break}return i}insertLogs(){let e=this.settings.template;e=this.dealWithTemplates(e,"createdFiles"),e=this.dealWithTemplates(e,"deletedFiles"),e=this.dealWithTemplates(e,"modifiedFiles"),console.log(e);let t=this.getEditor(),i=this.getInsertLocation(t);if(console.log(i),i.begin.line==-1||i.end.line==-1){let n=t.getCursor(),o=`{0}
{1}
{2}`.format(this.settings.startLine,e,this.settings.endLine);t.replaceRange(o,n,n)}else t.replaceRange(e,i.begin,i.end)}dealWithTemplates(e,t){let i=this.data[t],o=this.regexs[t].exec(e);if(o){let r=o[0];if(i.length){let f=i.length;e=e.replace(r,r.repeat(f));for(let m of i)e=e.replace(`$${t}`,m)}else e=e.replace(r,`
`)}return e}onunload(){console.log("unloading plugin")}async loadSettings(){this.settings=Object.assign({},y,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}},b=c;
